WITH top_5_customer_cnt_cte (customer_id, first_name, last_name, city, country,
total_amount_paid) AS
(SELECT A.customer_id,
A.first_name,
A.last_name,
C.city,
D.country,
SUM(E.amount) AS total_amount_paid
FROM customer A
INNER JOIN address B ON A.address_id = B.address_id
INNER JOIN city C ON B.city_id = C.city_id
INNER JOIN country D ON C.country_id = D.country_id
INNER JOIN payment E ON A.customer_id = E.customer_id
WHERE C.city IN ('Aurora', 'Acua', 'Citrus Heights', 'Iwaki', 'Amba\ur', 'Shanwei', 'So Leopoldo',
'Teboksary', 'Tianjin', 'Cianjur')
GROUP BY A.customer_id,
A.first_name,
A.last_name,
C.city,
D.country
ORDER BY total_amount_paid DESC
LIMIT 5)
SELECT D.country,
COUNT(DISTINCT A.customer_id) AS all_customer_count,
COUNT(DISTINCT top_5_customer_cnt_cte) AS top_customer_count
FROM customer A
JOIN address B ON A.address_id = B.address_id
JOIN city C ON B.city_id = C.city_id
JOIN country D ON C.country_id = D.country_id
JOIN top_5_customer_cnt_cte ON A.customer_id = top_5_customer_cnt_cte.customer_id
GROUP BY D.country
ORDER BY all_customer_count DESC
LIMIT 10



# Approach explanation:  I first isolated the part of the original query responsible for finding the top
5 customers by the total amount paid. Then, I transformed this portion into a
Common Table Expression (CTE) called "top_5_customer_cnt_cte". Within the CTE,
I selected the relevant columns and applied the necessary aggregation functions.
Finally, I integrated the CTE into the main query, joining it with the customer table
and aggregating the counts based on country to achieve the desired results.
